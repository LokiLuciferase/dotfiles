# aliases
set -s command-alias[100] "aro=attach -r"
set -s command-alias[101] "rs=rename-session"
# improve colors
set -g default-terminal 'xterm-256color'
set-option -ga terminal-overrides ",xterm-256color:RGB"
set -g default-shell $SHELL

# create new windows/panes in same directory
bind c new-window -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

# enable and disable keyboard input for panes
bind < select-pane -d \; display-message "input disabled"
bind > select-pane -e \; display-message "input enabled"

# switch prefix if running locally
if-shell 'test -z "$SSH_CLIENT"' 'set -g prefix C-a'

# size windows based on clients looking at that window
setw -g aggressive-resize on

# enable mouse control
set -g mouse on

# start window numbers at 1 to match keyboard order with tmux order
set -g base-index 1

# start pane numbers at 1 to match keyboard order with tmux order
setw -g pane-base-index 1

set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

# vim-like bindings
unbind l
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
set-window-option -g mode-keys vi
set-window-option -g status-keys vi

# easy resizing of panes
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -n C-Space resize-pane -Z

# reenable automatic renaming for the current window
bind N setw automatic-rename on \; display-message "automatic rename enabled"

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# monitor windows for activity
setw -g monitor-activity on

# don't wait for escape sequences
set -sg escape-time 0

# display pane numbers for longer
set -g display-panes-time 2000

set -g status-left-length 20

set -g status-right '#[fg=colour166]#([ "$(tmux show-option -g prefix)" != "prefix C-a" ] && echo "($(tmux show-option -g prefix | cut -c 8-)) ")#[fg=colour33]%d %b %Y #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour64]%I:%M %p #{?client_prefix,#[fg=colour160],#[fg=colour61]}- #[fg=colour37]#([ -f $HOME/.name ] && cat $HOME/.name || hostname)'

# increase scrollback lines
set -g history-limit 65536

# keybinding to clear history
bind C-k clear-history \; display-message "history cleared"

# C-b ! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "create pane from:" "join-pane -s ':%%'"

# reload the .tmux.conf file with Ctrl-r
bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "configuration reloaded"

# toggle passthrough of prefix
bind P if-shell "[ \"$(tmux show-options -g prefix)\" = \"prefix C-a\" ]" '\
    set -g prefix C-b; display-message "passthrough enabled"; refresh-client -S; \
    ' '\
    set -g prefix C-a; display-message "passthrough disabled"; refresh-client -S; \
    '

# integrate with vim
set -g focus-events on
set -g status-style bg=default
set -g status-left-length 80
set -g status-right-length 80
set -g status-justify centre

# source tmux config if exists
# available colors: blue|gray|magenta|purple|yellow|cyan|green|orange|red
THEME_COLOR="cyan"
THEME_COLOR_LOCAL="green"
THEME_CONFIG="$HOME/.config/tmux/themes/powerline/default/${THEME_COLOR}.tmuxtheme"
THEME_CONFIG_LOCAL="$HOME/.config/tmux/themes/powerline/default/${THEME_COLOR_LOCAL}.tmuxtheme"

if-shell '[ -f $THEME_CONFIG_LOCAL ] && [ -z "$SSH_CONNECTION" ]' "source-file $THEME_CONFIG_LOCAL"
if-shell '[ -f $THEME_CONFIG ] && [ -n "$SSH_CONNECTION" ]' "source-file $THEME_CONFIG"

# activate tpm if exist
 set -g @tpm_plugins '          \
   tmux-plugins/tpm             \
   tmux-plugins/tmux-resurrect  \
 '

if-shell '[ -d $HOME/.config/tmux/plugins/tpm ]' 'run "$HOME/.config/tmux/plugins/tpm/tpm"'
